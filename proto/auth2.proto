syntax = "proto3";

option go_package = "auth2/proto";
option php_namespace = "ProtoAuth2";
option php_generic_services = true;

service Auth2 {
  rpc Stats(EmptyRequest) returns(StatsResponse) {}
  rpc Restart(EmptyRequest) returns(EmptyResponse) {}
  rpc SystemSupportNotify(SystemSupportNotifyRequest) returns(EmptyResponse) {}

  rpc GetUserSessions(UserRequest) returns (GetUserSessionsResponse) {}
  rpc SaveUserSession(UserSessionRequest) returns (EmptyResponse) {}
  rpc DeleteUserSession(UserSessionRequest) returns (EmptyResponse) {}

  rpc SearchUsers(SearchUsersRequest) returns (UsersResponse) {}

  rpc GetUser(UserRequest) returns (User) {}

  rpc DeleteUser(UserRequest) returns (EmptyResponse) {}
  rpc DeleteUsers(UserIdsRequest) returns (EmptyResponse) {}

  rpc CreateUser(UserPayload) returns (User) {}
  rpc UpdateUser(UserPayload) returns (User) {}

  rpc CheckUserPassword(UserPasswordRequest) returns (EmptyResponse) {}
  rpc SetUserPassword(UserPasswordRequest) returns (EmptyResponse) {}

  rpc ConfirmUser(TokenRequest) returns (User) {}
  rpc RequestUserPassword(UserRequest) returns (User) {}
  rpc ChangeUserPassword(ChangeUserPasswordRequest) returns (User) {}

  rpc SetUserRoles(SetUserRolesRequest) returns (User) {}
}

message EmptyRequest {}

message EmptyResponse {}

message TokenRequest {
  string token = 1;
}

message ChangeUserPasswordRequest {
  string token = 1;
  string password = 2;
}

message SystemSupportNotifyRequest {
  string message = 1;
}

message SetUserRolesRequest {
  UserRequest user = 1;
  repeated string role_ids = 2;
}

message UserSessionRequest {
  string session_id = 1;
  optional uint32 user_id = 2;
  optional uint64 ip = 3;
  optional string last_uri = 4;
  optional string user_agent = 5;
}

message SearchUsersRequest{
  optional int32 limit = 1;
  optional int32 offset = 2;
  optional bool is_count_total = 3;
  optional bool is_desc = 4;
}

message UsersResponse {
  repeated User users = 1;
  optional int32 total_count = 2;
}

message StatsResponse {
  string alloc = 1;
  string total_alloc = 2;
  string sys = 3;
  string num_gc = 4;
}

message CreateUserRequest {
  string email = 1;
  string username = 2;
  string password = 3;
  optional string first_name = 4;
  optional string last_name = 5;
  optional string phone = 6;
  optional bool is_enabled = 7;
  optional bool is_moderated = 8;
  optional uint32 image_id = 9;
}

message UserPasswordRequest {
  UserRequest user = 1;
  string password = 2;
}

message UserRequest {
  optional uint32 user_id = 1;
  optional string username = 2;
  optional string email = 3;
}

message UserIdsRequest {
  repeated uint32 user_ids = 1;
}

message User {
  uint32 id = 1;
  string username = 2;
  optional uint32 image_id = 3;
  string first_name = 4;
  string last_name = 5;
  string email = 6;
  string phone = 7;
  bool is_enabled = 8;
  bool is_moderated = 9;
  optional uint32 last_login = 10;
  uint32 last_ip = 11;
  optional uint32 password_requested_at = 12;
  uint32 created = 13;
  uint32 updated = 14;
  optional string params = 15;
  optional string roles = 16;
  string password = 17;
}

message UserPayload {
  optional uint32 id = 1;
  string username = 2;
  optional uint32 image_id = 3;
  string first_name = 4;
  string last_name = 5;
  string email = 6;
  string phone = 7;
  bool is_enabled = 8;
  bool is_moderated = 9;
  optional uint32 last_login = 10;
  uint32 last_ip = 11;
  optional uint32 password_requested_at = 12;
  optional uint32 created = 13;
  optional uint32 updated = 14;
  optional string params = 15;
  optional string roles = 16;
  optional string password = 17;
  repeated string role_ids = 18;
}

message GetUserSessionsResponse {
  repeated UserSession sessions = 1;
}

message UserSession {
  string id = 1;
  string last_uri = 2;
  string user_agent = 3;
  uint64 ip = 4;
  string ip_string = 5;
  uint64 updated = 6;
  uint64 created = 7;
  uint64 ttl = 8;
  string ttl_string = 9;
}